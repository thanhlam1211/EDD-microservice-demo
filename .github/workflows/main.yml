name: Build and publish images backstage microservice demo 

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: product-service/Dockerfile
            image: ghcr.io/1211/product-service
          - dockerfile: inventory-service/Dockerfile
            image: ghcr.io/1211/inventory-service
          - dockerfile: order-service/Dockerfile
            image: ghcr.io/1211/order-service
          - dockerfile: notification-service/Dockerfile
            image: ghcr.io/1211/notification-service
          - dockerfile: discovery-service/Dockerfile
            image: ghcr.io/1211/discovery-service
          - dockerfile: api-gateway/Dockerfile
            image: ghcr.io/1211/api-gateway
                  
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: ACTIONS_ALLOW_UNSECURE_COMMANDS
      id: ACTIONS_ALLOW_UNSECURE_COMMANDS
      run: echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true'
  
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
      
    - name: Checkout code
      uses: actions/checkout@v3
      
    # - name: Setup MSBuild path
    #   uses: microsoft/setup-msbuild@v1
    #   env:
    #     ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"
    
 
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Run database container
      run: docker run --name mysql -d mysql:8.0 --default-character-set=utf8mb4 --collation=utf8mb4_unicode_ci
      
    # - name: Wait for database to start
    #   run: |
    #     while ! nc -z mysql 3306; do sleep 3; done
    - name: Set up database environment variables
      env:
        MYSQL_HOST: localhost
        MYSQL_PORT: 3306
        MYSQL_ROOT_PASSWORD: lamdepzai123  # Replace with your actual password
        # Add other environment variables if needed
      run: |
        echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true'
        echo "::set-env name=MYSQL_HOST::localhost"
        echo "::set-env name=MYSQL_PORT::3306"
        echo "::set-env name=MYSQL_ROOT_PASSWORD::lamdepzai123"  # Replace with your actual password
        
    - name: Build with Maven
      run:
        mvn -B package --file pom.xml

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        # registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
#    - name: Build Docker Image with Jib
#      working-directory: .
#      run: mvn clean package -P build-docker-image

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ matrix.image }}
        
    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
